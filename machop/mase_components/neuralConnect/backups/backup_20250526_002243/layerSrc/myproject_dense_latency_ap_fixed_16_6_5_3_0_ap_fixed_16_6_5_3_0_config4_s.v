// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
output  [15:0] ap_return;
input   ap_ce;

reg[15:0] ap_return;

reg  signed [15:0] p_read_15_reg_754;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg  signed [15:0] p_read_16_reg_759;
wire   [15:0] add_ln703_fu_671_p2;
reg   [15:0] add_ln703_reg_764;
wire   [15:0] add_ln703_2_fu_683_p2;
reg   [15:0] add_ln703_2_reg_769;
wire   [15:0] add_ln703_6_fu_699_p2;
reg   [15:0] add_ln703_6_reg_774;
wire   [9:0] mul_i_i_0_fu_136_p1;
wire    ap_block_pp0_stage0;
wire  signed [9:0] mul_i_i_6_fu_137_p1;
wire  signed [10:0] mul_i_i_3_fu_139_p1;
wire  signed [10:0] mul_i_i_5_fu_140_p1;
wire  signed [9:0] mul_i_i_1_fu_141_p1;
wire   [7:0] mul_i_i_4_fu_142_p1;
wire  signed [9:0] mul_i_i_7_fu_143_p1;
wire  signed [9:0] mul_i_i_2_fu_144_p1;
wire  signed [7:0] mul_i_i_8_fu_145_p1;
wire   [25:0] mul_i_i_0_fu_136_p2;
wire   [25:0] mul_i_i_1_fu_141_p2;
wire   [25:0] mul_i_i_2_fu_144_p2;
wire   [25:0] mul_i_i_3_fu_139_p2;
wire   [23:0] mul_i_i_4_fu_142_p2;
wire   [13:0] tmp_fu_579_p4;
wire   [25:0] mul_i_i_7_fu_143_p2;
wire   [23:0] mul_i_i_8_fu_145_p2;
wire   [13:0] tmp_1_fu_613_p4;
wire   [19:0] p_shl_fu_627_p3;
wire   [17:0] p_shl4_fu_639_p3;
wire  signed [20:0] p_shl_cast_fu_635_p1;
wire  signed [20:0] p_shl4_cast_fu_647_p1;
wire   [20:0] mul_i_i_9_fu_651_p2;
wire   [10:0] tmp_2_fu_657_p4;
wire   [15:0] conv_i_i_i_1_fu_534_p4;
wire   [15:0] conv_i_i_i_fu_519_p4;
wire   [15:0] conv_i_i_i_3_fu_564_p4;
wire  signed [15:0] tmp_cast_fu_589_p1;
wire   [15:0] add_ln703_1_fu_677_p2;
wire   [15:0] conv_i_i_i_2_fu_549_p4;
wire  signed [14:0] tmp_1_cast_fu_623_p1;
wire  signed [14:0] sext_ln703_fu_667_p1;
wire   [14:0] add_ln703_5_fu_689_p2;
wire  signed [15:0] sext_ln703_10_fu_695_p1;
wire   [15:0] conv_i_i_i_7_fu_598_p4;
wire   [25:0] mul_i_i_5_fu_140_p2;
wire   [25:0] mul_i_i_6_fu_137_p2;
wire   [15:0] conv_i_i_i_5_fu_709_p4;
wire   [15:0] conv_i_i_i_6_fu_723_p4;
wire   [15:0] add_ln703_4_fu_737_p2;
wire   [15:0] add_ln703_7_fu_743_p2;
wire   [15:0] add_ln703_3_fu_733_p2;
wire   [15:0] add_ln703_8_fu_748_p2;
reg    ap_ce_reg;
reg   [15:0] ap_return_int_reg;

myproject_mul_16s_10ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
mul_16s_10ns_26_1_1_U109(
    .din0(p_read),
    .din1(mul_i_i_0_fu_136_p1),
    .dout(mul_i_i_0_fu_136_p2)
);

myproject_mul_16s_10s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
mul_16s_10s_26_1_1_U110(
    .din0(p_read_15_reg_754),
    .din1(mul_i_i_6_fu_137_p1),
    .dout(mul_i_i_6_fu_137_p2)
);

myproject_mul_16s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_16s_11s_26_1_1_U111(
    .din0(p_read3),
    .din1(mul_i_i_3_fu_139_p1),
    .dout(mul_i_i_3_fu_139_p2)
);

myproject_mul_16s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_16s_11s_26_1_1_U112(
    .din0(p_read_16_reg_759),
    .din1(mul_i_i_5_fu_140_p1),
    .dout(mul_i_i_5_fu_140_p2)
);

myproject_mul_16s_10s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
mul_16s_10s_26_1_1_U113(
    .din0(p_read1),
    .din1(mul_i_i_1_fu_141_p1),
    .dout(mul_i_i_1_fu_141_p2)
);

myproject_mul_16s_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8ns_24_1_1_U114(
    .din0(p_read4),
    .din1(mul_i_i_4_fu_142_p1),
    .dout(mul_i_i_4_fu_142_p2)
);

myproject_mul_16s_10s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
mul_16s_10s_26_1_1_U115(
    .din0(p_read7),
    .din1(mul_i_i_7_fu_143_p1),
    .dout(mul_i_i_7_fu_143_p2)
);

myproject_mul_16s_10s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
mul_16s_10s_26_1_1_U116(
    .din0(p_read2),
    .din1(mul_i_i_2_fu_144_p1),
    .dout(mul_i_i_2_fu_144_p2)
);

myproject_mul_16s_8s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8s_24_1_1_U117(
    .din0(p_read8),
    .din1(mul_i_i_8_fu_145_p1),
    .dout(mul_i_i_8_fu_145_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        add_ln703_2_reg_769 <= add_ln703_2_fu_683_p2;
        add_ln703_6_reg_774 <= add_ln703_6_fu_699_p2;
        add_ln703_reg_764 <= add_ln703_fu_671_p2;
        p_read_15_reg_754 <= p_read6;
        p_read_16_reg_759 <= p_read5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= add_ln703_8_fu_748_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = add_ln703_8_fu_748_p2;
    end
end

assign add_ln703_1_fu_677_p2 = ($signed(conv_i_i_i_3_fu_564_p4) + $signed(tmp_cast_fu_589_p1));

assign add_ln703_2_fu_683_p2 = (add_ln703_1_fu_677_p2 + conv_i_i_i_2_fu_549_p4);

assign add_ln703_3_fu_733_p2 = (add_ln703_2_reg_769 + add_ln703_reg_764);

assign add_ln703_4_fu_737_p2 = (conv_i_i_i_5_fu_709_p4 + conv_i_i_i_6_fu_723_p4);

assign add_ln703_5_fu_689_p2 = ($signed(tmp_1_cast_fu_623_p1) + $signed(sext_ln703_fu_667_p1));

assign add_ln703_6_fu_699_p2 = ($signed(sext_ln703_10_fu_695_p1) + $signed(conv_i_i_i_7_fu_598_p4));

assign add_ln703_7_fu_743_p2 = (add_ln703_6_reg_774 + add_ln703_4_fu_737_p2);

assign add_ln703_8_fu_748_p2 = (add_ln703_7_fu_743_p2 + add_ln703_3_fu_733_p2);

assign add_ln703_fu_671_p2 = (conv_i_i_i_1_fu_534_p4 + conv_i_i_i_fu_519_p4);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign conv_i_i_i_1_fu_534_p4 = {{mul_i_i_1_fu_141_p2[25:10]}};

assign conv_i_i_i_2_fu_549_p4 = {{mul_i_i_2_fu_144_p2[25:10]}};

assign conv_i_i_i_3_fu_564_p4 = {{mul_i_i_3_fu_139_p2[25:10]}};

assign conv_i_i_i_5_fu_709_p4 = {{mul_i_i_5_fu_140_p2[25:10]}};

assign conv_i_i_i_6_fu_723_p4 = {{mul_i_i_6_fu_137_p2[25:10]}};

assign conv_i_i_i_7_fu_598_p4 = {{mul_i_i_7_fu_143_p2[25:10]}};

assign conv_i_i_i_fu_519_p4 = {{mul_i_i_0_fu_136_p2[25:10]}};

assign mul_i_i_0_fu_136_p1 = 26'd492;

assign mul_i_i_1_fu_141_p1 = 26'd67108398;

assign mul_i_i_2_fu_144_p1 = 26'd67108504;

assign mul_i_i_3_fu_139_p1 = 26'd67108317;

assign mul_i_i_4_fu_142_p1 = 24'd99;

assign mul_i_i_5_fu_140_p1 = 26'd67108273;

assign mul_i_i_6_fu_137_p1 = 26'd67108433;

assign mul_i_i_7_fu_143_p1 = 26'd67108566;

assign mul_i_i_8_fu_145_p1 = 24'd16777128;

assign mul_i_i_9_fu_651_p2 = ($signed(p_shl_cast_fu_635_p1) - $signed(p_shl4_cast_fu_647_p1));

assign p_shl4_cast_fu_647_p1 = $signed(p_shl4_fu_639_p3);

assign p_shl4_fu_639_p3 = {{p_read9}, {2'd0}};

assign p_shl_cast_fu_635_p1 = $signed(p_shl_fu_627_p3);

assign p_shl_fu_627_p3 = {{p_read9}, {4'd0}};

assign sext_ln703_10_fu_695_p1 = $signed(add_ln703_5_fu_689_p2);

assign sext_ln703_fu_667_p1 = $signed(tmp_2_fu_657_p4);

assign tmp_1_cast_fu_623_p1 = $signed(tmp_1_fu_613_p4);

assign tmp_1_fu_613_p4 = {{mul_i_i_8_fu_145_p2[23:10]}};

assign tmp_2_fu_657_p4 = {{mul_i_i_9_fu_651_p2[20:10]}};

assign tmp_cast_fu_589_p1 = $signed(tmp_fu_579_p4);

assign tmp_fu_579_p4 = {{mul_i_i_4_fu_142_p2[23:10]}};

endmodule //myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s
