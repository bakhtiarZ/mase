// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject_myproject,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.940000,HLS_SYN_LAT=0,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=10,HLS_VERSION=2020_2}" *)

module myproject (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_input,
        layer2_out_0,
        layer2_out_0_ap_vld,
        layer2_out_1,
        layer2_out_1_ap_vld
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] dense_input;
output  [32:0] layer2_out_0;
output   layer2_out_0_ap_vld;
output  [32:0] layer2_out_1;
output   layer2_out_1_ap_vld;

reg layer2_out_0_ap_vld;
reg layer2_out_1_ap_vld;

wire    call_ret_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_50_ap_ready;
wire   [32:0] call_ret_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_50_ap_return_0;
wire   [32:0] call_ret_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_50_ap_return_1;
wire    ap_ce_reg;

myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s call_ret_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_50(
    .ap_ready(call_ret_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_50_ap_ready),
    .p_read(dense_input),
    .ap_return_0(call_ret_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_50_ap_return_0),
    .ap_return_1(call_ret_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_50_ap_return_1)
);

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        layer2_out_0_ap_vld = 1'b1;
    end else begin
        layer2_out_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        layer2_out_1_ap_vld = 1'b1;
    end else begin
        layer2_out_1_ap_vld = 1'b0;
    end
end

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign layer2_out_0 = call_ret_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_50_ap_return_0;

assign layer2_out_1 = call_ret_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_50_ap_return_1;

endmodule //myproject
